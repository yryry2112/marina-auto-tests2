import io.qameta.allure.Feature;
import io.qameta.allure.Owner;
import io.qameta.allure.Severity;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static io.qameta.allure.Allure.step;
import static io.qameta.allure.SeverityLevel.NORMAL;

@Owner("yryry_21")
@Severity(NORMAL)
@Feature("Маршруты")

public class RouteCreationModalTest {
    @Test
    @DisplayName("Поиск по городам/ПВЗ")
    public void checkSearchCityAndPVZTest(){
        step("Поиск осуществляется по города", () -> {
        });
        step("Поиск осуществляется по ПВЗ", () -> {
        });
    }
    @Test
    @DisplayName("Проверка чек-боксов города")
    public void checkCityTest() {
        step("При нажатии на город в правой части блока появляется список ПВЗ этого города", () -> {
        });
        step("Чек-бокс невыбранного города белый и активный", () -> {
        });
        step("Чек-бокс города, ПВЗ которого выбраны частично, красный с белой горизонтальной полоской", () -> {
        });
        step("При нажатии на чек-бокс с белой полоской, происходит 'довыбор' всех не выбранных ПВЗ со всеми типами доставки", () -> {
        });
        step("При нажатии на чек-бокс с белой галочкой, происходит отмена выбора всех ПВЗ со всеми типами доставки", () -> {
        });
        step("При нажатии на полностью белый чек-бокс, происходит выбор всех ПВЗ города со всеми типами доставки", () -> {
        });
        step("При нажатии на неактивный чек-бокс города, ничего не происходит", () -> {
        });
    }
    @Test
    @DisplayName("Проверка текстовой подсказки")
    public void checkTextHintTest() {
        step("При нажатии на знак вопроса в блоке с ПВЗ, появляется текстовая подсказка", () -> {
        });
    }
    @Test
    @DisplayName("Проверка маршрутов ПВЗ")
    public void checkPickupPVZTest() {
        step("В блоке с ПВЗ для уже привязанных к маршрутам ПВЗ, в чек-боксах выводятся цифры - номера маршрутов, к которым они привязаны", () -> {
        });
    }
    @Test
    @DisplayName("Проверка чек-боксов стены упаковки")
    public void checkPackingWallTest() {
        step("При нажатии на активный чек-бокс стены упаковки чек-бокс становится красного цвета с белой галочкой внутри", () -> {
        });

        step("При нажатии на неактивный чек-бокс стены упаковки ничего не происходит", () -> {
        });
    }
    @Test
    @DisplayName("Модальное окно создания/редактирования маршрута")
    public void checkModalTest() {
        step("При нажатии на область вне модалки, появляется предупреждение о том, что изменения не будут сохранены", () -> {
        });
        step("Если в модальном нажать 'Да', изменения не сохранятся", () -> {
        });

        step("Если в модальном нажать 'Нет', модалка останется открытой", () -> {
        });

        step("Кнопка 'Сохранить' сохраняет все примененные изменения", () -> {
        });
    }
}
